pipeline {
	 agent any
	//agent { label 'jenkins-agent' }
	//agent { dockerfile true }
/*	environment {
		dockerImage = ''
        basedir = ''
	}*/

    options {
        timeout(time: 10, unit: 'MINUTES')
    }
	
	stages {
        stage('Docker System Prune') {
            steps {
                sh 'docker system prune -a --volumes -f'
                sh 'docker ps'
            }
        }

        stage('Check tooling versions') {
/*            agent {
                dockerfile {
                    filename 'Dockerfile'
                    args '-v $HOME/.m2:/root/.m2'
                    reuseNode true
                }
            }*/
            steps {
/*                script {
                    currentWorkspace = "$WORKSPACE"
                    echo "Current workspace is ${currentWorkspace}"
                }*/
                echo "Check Docker version.."
                sh '''
                  docker version
                  docker info
                  docker-compose version
                '''
            }
        }
/*        stage("Check Docker version") {
              steps {
              sh '''
                  docker version
                  docker info
                  docker-compose version

                '''
                  *//*     echo "basedir is - ${basedir}"
                    mkdir -p ${basedir}/test
                    ls -l*//*
              }
        }*/

        stage('Start docker-compose') {
            steps {

                echo "Check permissions 1"
                sh 'ls -lrt'
                sh 'whoami'
                echo "Current workspace is $WORKSPACE"

                sh 'docker-compose -f docker-compose-api.yaml up -d --no-color'

                sh '''
                    docker exec -it docker-api-agent-composer-api-test-service-1 bash
                    echo "Check permissions 2"
                    sh 'ls -lrt'
                    sh 'whoami'
                    echo "Current workspace is $WORKSPACE"
                    sh 'exit'
                '''

                echo "Check permissions 3"
                sh 'ls -lrt'
                sh 'whoami'
                echo "Current workspace is $WORKSPACE"
                sh 'docker-compose ps'
            }
        }

        stage('API Automation') {
            steps {
/*                script {
                    basedir = "$WORKSPACE"
                    echo "Current workspace/basedir is ${basedir}"
                }*/
                sh 'docker-compose -f docker-compose-api.yaml run -e TYPE="@API" api-test-service'

                echo 'Check permissions 4'
                sh 'ls -lrt'
                sh 'whoami'
                echo "Current workspace is $WORKSPACE"
                sh 'docker-compose ps'
            }
        }

        stage('Generate HTML reports') {
            steps {
                echo 'Check permissions 5'
                sh 'ls -lrt'
                sh 'whoami'
                echo "Current workspace is $WORKSPACE"
                sh 'docker ps'
                cucumber buildStatus: '',
                        reportTitle: 'Cucumber report',
                        fileIncludePattern: '**/*.json',
                        //jsonReportDirectory: "./target",
                        //jsonReportDirectory: "${currentWorkspace}/target",
                        jsonReportDirectory: "/home/docker-jenkins-test/target/",
                        trendsLimit: 10,
                        classifications: [
                                [
                                        'key'  : 'API',
                                        'value': 'API'
                                ]
                        ]

                // publish html
                publishHTML target: [
                        allowMissing         : false,
                        alwaysLinkToLastBuild: false,
                        keepAll              : true,
                        //reportDir: "${currentWorkspace}/target/Reports/",
                        reportDir            : "/home/docker-jenkins-test/target/Reports/",
                        reportFiles          : 'automated-test-report.html',
                        reportName           : 'Extent Test Report'
                ]

                publishHTML target: [
                        allowMissing         : false,
                        alwaysLinkToLastBuild: false,
                        keepAll              : true,
                        reportDir            : "/home/docker-jenkins-test/target/cucumber-html-report/",
                        reportFiles          : 'regression-tests.html',
                        reportName           : 'Cucumber Test Report'
                ]
            }
        }
    }
		/*stage('Docker Teardown') {
			steps {
				*//* Tear down docker compose *//*
				sh 'docker-compose down'
				
                *//* Tear down all containers *//*
                sh 'docker-compose rm -sf'
			}
		}*/


	/*post {
        always {
        // publish html reports
        publishHTML target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                // reportDir: "${basedir}/target/Reports/",
                reportDir: "target/Reports/",
                reportFiles: 'automated-test-report.html',
                reportName: 'Extent Test Report'
        ]
        publishHTML target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: "target/cucumber-html-report/",
                reportFiles: 'regression-tests.html',
                reportName: 'Cucumber Test Report'
        ]

            sh 'docker-compose down --remove-orphans -v'
            sh 'docker-compose ps'
            //cleanWs()
        }
    }
*/

}










